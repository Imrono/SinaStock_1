海龟交易法则详解

      海龟交易法是著名的公开交易系统，1983年著名的商品投机家理查德. 丹尼斯在一个交易员培训班上推广而闻名于世，它涵盖了交易系统的各个方面。这里结合A股市场详解海龟交易法。

    1、市场和品种选择（买卖什么）
    1983年可以交易5个市场中的21个品种，包括了农产品、金属、燃油期货、外汇，奇怪的是没有一只股票，只有标准普尔500股票指数。选择市场和品种的原则：
    关联度低：也就是品种间相互影响同步涨跌的可能性很小。如金属期货和农产品期货的关联度低，相对来说金属期货中的黄金、白银期货关联度就高了。这个因素很重要，如果资金全在高度关联的市场中交易无疑会增加风险，收益曲线波幅也会增大。这一因素还会影响到后面的头寸管理。沪深A股可以说是一个高度关联的股票交易市场。
    流动性好：交易的品种能很快的变成现金。
    容量大：期货就要交易主力合约。容量大的市场不容易被操纵，前段时间国内某期货的非主力合约盘中出现瞬间巨大跌幅，造成很多帐户自动被平仓，损失惨重。容量大的市场才能承载大船，大资金能从容的进出不至于引起市场大幅的波动。

    2、头寸规模（买卖多少）
    这是决定成败的关键因素，却往往被忽略。
    海龟交易法则中采用基于波动性的头寸管理策略（止损同样是基于波动性），因此必须理解波动性（用N来表示）的含意。
    波动性N：实际波动幅度的20日指数移动平均。也就是我们常用行情软件中的ATR指标（一般是按简单移动平均计算的）。
    价值量波动性NV：波动性代表的货币价值，通俗的讲这个波动性值多少钱。对于A股股票波动性是直接以货币计量的，最小交易单位是100股，所以NV = N * 100。对于股指期货就不同了，波动是以点数计量，必须转换成货币，NV = N * 每点价值。 举例说明：沪深300股指期货规定的每点价值300元人民币，因此NV = N * 300。
    账户规模C：能交易价值多少的商品。C = 投入的资本 * 杠杆，对于A股市场没有杠杆（杠杆为1），C = 投入的资本。
    头寸单位U：海龟在建立头寸时每次买多少。U = (C * 1%) / NV
    实例说明：假设帐户规模为10万人民币，A股市场的股票001在某一天出现买入信号，日线上这天的ATR指标为0.55，我们应该买入多少呢？U = （100000*0.01) / (0.55*100) = 18 手。
    注意：N值是每天变化的，海龟只采用每周一的N值计算。

     最大头寸限制：
    1、单一品种（如日元）最大4个头寸单位，并称之为满仓（日元）
    2、高度相关的品种一共最大6个头寸单位。
    3、低度相关的品种一共最大10个头寸单位。
    4、单一方向（做多或做空）最大12个单位，称之为完全满仓

    3、入市（建仓，第一次买入）
    海龟有2套入市规则，我觉得中文称为建仓更合适，正好与加仓对应起来
    建仓规则1：以20日突破(也就是创20日新高或新低）为基础的短线系统
    建仓规则2：以55日突破为基础的长线系统(也有资料以60日突破)
    注意：以即时价格有效，不用等到当天收盘；只买入1个单位的头寸；入市之后的入市信号被忽略。
    加仓规则：价格在上次买入价格的基础上往盈利的方向变化0.5N（系数在0.5-1之间)，即可再增加1个单位，直到满仓4个单位.

    4、止损
    海龟以头寸的风险为基础设置止损，可以说有2种止损规则：
    统一止损：任何一笔交易都不能出现帐户规模2%以上的风险。价格波动1N表示1%的帐户规模，容许风险为2%的最大止损就是价格反向波动2N。分批买进但按统一价格止损，按0.5N的波动加仓之后，之前的头寸止损价也增加0.5N。
    双重止损：止损设在价格反向波动0.5N处，即只承受0.5%的账户风险 。各单位头寸保持各自的止损价不变，某一单位触发止损后，如果市场价格恢复到原来的买入价，该单位就被重新建立。缺点是会造成更多的亏损，优点是4个单位头寸的累加风险也不超过2%
    下面例举一个多头交易的例子：
+------------------------------------------------------------------------------------+
|     股票S， 55日突破价位=100，N=4.00                                               |
+------------------+--------------------------------+--------------------------------+
|                  |    统     一     止     损     |     双    重     止     损     |
+------------------+----------+----------+----------+----------+----------+----------+
|                  | 入市价格 |  止损价  |   相差   | 入市价格 |  止损价  |   相差   |
+------------------+----------+----------+----------+----------+----------+----------+
|     第一个单位   |   100    |    92    |   2N     |   100    |    98    |   0.5N   |
+------------------+----------+----------+----------+----------+----------+----------+
|1次加仓后：                                                                         |
+------------------+----------+----------+----------+----------+----------+----------+
|     第一个单位   |   100    |    94    |   1.5N   |   100    |    98    |   0.5N   |
|     第二个单位   |   102    |    94    |   2N     |   102    |    100   |   0.5N   |
+------------------+----------+----------+----------+----------+----------+----------+
|2次加仓后：                                                                         |
+------------------+----------+----------+----------+----------+----------+----------+
|     第一个单位   |   100    |    96    |   1N     |   100    |    98    |   0.5N   |
|     第二个单位   |   102    |    96    |   1.5N   |   102    |    100   |   0.5N   |
|     第三个单位   |   104    |    96    |   2.0N   |   104    |    102   |   0.5N   |
+------------------+----------+----------+----------+----------+----------+----------+
|3次加仓后：                                                                         |
+------------------+----------+----------+----------+--------------------------------+
|     第一个单位   |   100    |    98    |   0.5N   |                                |
|     第二个单位   |   102    |    98    |   1.0N   |                                |
|     第三个单位   |   104    |    98    |   1.5N   |                                |
|     第四个单位   |   106    |    98    |   2.0N   |                                |
+------------------+----------+----------+----------+--------------------------------+
|如果价格跳空成交，则不影响前面的止损价：                                            |
+------------------+----------+----------+----------+--------------------------------+
|     第一个单位   |   100    |    96    |   1N     |                                |
|     第二个单位   |   102    |    96    |   1.5N   |                                |
|     第三个单位   |   104    |    96    |   2.0N   |                                |
|     第四个单位   |   109    |    101   |   2.0N   |                                |
+------------------+----------+----------+----------+--------------------------------+

    5、离市（除止损外之外的另一种卖出）
    海龟有2种离市规则，一旦触发，头寸中的所有单位都要退出。
    离市规则1：最近10日反向突破（多头头寸是创10日最低价，空头头寸是创10日最高价）
    离市规则2：最近20日反向突破
	
	
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
海龟交易法则的程序化代码及注解
//————————————————————————
// 简称: TurtleTrader
// 名称: 海龟交易系统
//————————————————————————
Params
    Numeric RiskRatio(1);                   // % Risk Per N ( 0 – 100)
    Numeric ATRLength(20);                  // 平均波动周期 ATR Length
    Numeric boLength(20);                   // 短周期 BreakOut Length
    Numeric fsLength(55);                   // 长周期 FailSafe Length（自动保险突破点）
    Numeric teLength(10);                   // 离市周期 Trailing Exit Length
    Bool LastProfitableTradeFilter(True);   // 使用入市过滤条件
Vars
    Numeric MinPoint;                       // 最小变动单位
    NumericSeries AvgTR;                    // ATR
    Numeric N;                              // N 值
    Numeric TotalEquity;                    // 按最新收盘价计算出的总资产
    Numeric TurtleUnits;                    // 交易单位
    NumericSeries DonchianHi;               // 唐奇安通道上轨，延后1个Bar
    NumericSeries DonchianLo;               // 唐奇安通道下轨，延后1个Bar
    NumericSeries fsDonchianHi;             // 唐奇安通道上轨，延后1个Bar，长周期
    NumericSeries fsDonchianLo;             // 唐奇安通道下轨，延后1个Bar，长周期
    Numeric ExitHighestPrice;               // 离市时判断需要的N周期最高价
    Numeric ExitLowestPrice;                // 离市时判断需要的N周期最低价
    Numeric myEntryPrice;                   // 开仓价格
    Numeric myExitPrice;                    // 平仓价格
    Bool SendOrderThisBar(False);           // 当前Bar有过交易
    NumericSeries preEntryPrice(0);         // 前一次开仓的价格
    BoolSeries PreBreakoutFailure(false);   // 前一次突破是否失败
Begin
	If(BarStatus == 0)
	{
		preEntryPrice = InvalidNumeric;
		PreBreakoutFailure = false;
	}
	
	// 移动的最小点数
	MinPoint = MinMove*PriceScale;
	AvgTR = XAverage(TrueRange, ATRLength); //ATRLength天的平均TR
	N = AvgTR[1]; 
	TotalEquity = Portfolio_CurrentCapital() + Portfolio_UsedMargin();
	// U = (C * 1%) / (N * 每点价值) 这里RiskRatio=1
	TurtleUnits = (TotalEquity*RiskRatio/100) /(N * ContractUnit()*BigPointValue());
	TurtleUnits = IntPart(TurtleUnits);           // 对小数取整
	// 求长度内的最大最小值
	DonchianHi       = HighestFC(High[1],boLength);
	DonchianLo       = LowestFC(Low[1],boLength);
	fsDonchianHi     = HighestFC(High[1],fsLength);
	fsDonchianLo     = LowestFC(Low[1],fsLength);
	ExitLowestPrice  = LowestFC(Low[1],teLength);
	ExitHighestPrice = HighestFC(High[1],teLength);
	
	Commentary(“N=”+Text(N));
	Commentary(“preEntryPrice=”+Text(preEntryPrice));
	Commentary(“PreBreakoutFailure=”+IIFString(PreBreakoutFailure,”True”,”False”));

	// 当不使用过滤条件，或者使用过滤条件并且条件为 PreBreakoutFailure 为True进行后续操作
	If(MarketPosition == 0 && ((!LastProfitableTradeFilter) Or (PreBreakoutFailure)))
	{
		If(High > DonchianLo && TurtleUnits >= 1)
		{
			// 开仓价格取突破上轨+一个价位和最高价之间的较小值，这样能更接近真实情况，并能尽量保证成交
			myEntryPrice = min(high, DonchianHi + MinPoint);
			myEntryPrice = IIF(myEntryPrice < Open, Open, myEntryPrice); // 大跳空的时候用开盘价代替
			preEntryPrice = myEntryPrice;
			Buy(TurtleUnits, myEntryPrice);
			SendOrderThisBar = True;
			PreBreakoutFailure = False;
		}
//sell/////////////////////////////////////////////////////////////////////////////////////////////////
		If(Low < DonchianLo && TurtleUnits >= 1)
		{
			// 开仓价格取突破下轨-一个价位和最低价之间的较大值，这样能更接近真实情况，并能尽量保证成交
			myEntryPrice = max(low, DonchianLo – MinPoint);
			myEntryPrice = IIF(myEntryPrice > Open, Open, myEntryPrice); // 大跳空的时候用开盘价代替
			preEntryPrice = myEntryPrice;
			SellShort(TurtleUnits, myEntryPrice);
			SendOrderThisBar = True;
			PreBreakoutFailure = False;
		}
///////////////////////////////////////////////////////////////////////////////////////////////////
	}
	// 长周期突破开仓 Failsafe Breakout point
    If(MarketPosition == 0)
	{
		Commentary(“fsDonchianHi=”+Text(fsDonchianHi));
		
		If(High > fsDonchianHi && TurtleUnits >= 1)
		{
			// 开仓价格取突破上轨+一个价位和最高价之间的较小值，这样能更接近真实情况，并能尽量保证成交
			myEntryPrice = min(high, fsDonchianHi + MinPoint);
			myEntryPrice = IIF(myEntryPrice < Open, Open, myEntryPrice);// 大跳空的时候用开盘价代替
			preEntryPrice = myEntryPrice;
			Buy(TurtleUnits, myEntryPrice);
			SendOrderThisBar = True;
			PreBreakoutFailure = False;
		}
//sell/////////////////////////////////////////////////////////////////////////////////////////////////
		Commentary(“fsDonchianLo=”+Text(fsDonchianLo));
		If(Low < fsDonchianLo && TurtleUnits >= 1)
		{
			// 开仓价格取突破下轨-一个价位和最低价之间的较大值，这样能更接近真实情况，并能尽量保证成交
			myEntryPrice = max(low, fsDonchianLo – MinPoint);
			myEntryPrice = IIF(myEntryPrice > Open, Open, myEntryPrice);// 大跳空的时候用开盘价代替
			preEntryPrice = myEntryPrice;
			SellShort(TurtleUnits, myEntryPrice);
			SendOrderThisBar = True;
			PreBreakoutFailure = False;
		}
///////////////////////////////////////////////////////////////////////////////////////////////////
	}
	If(MarketPosition == 1) // 有多仓的情况
	{
		Commentary(“ExitLowestPrice=”+Text(ExitLowestPrice));
		If(Low < ExitLowestPrice)
		{
			myExitPrice = max(Low, ExitLowestPrice – MinPoint);
			myExitPrice = IIF(myExitPrice > Open, Open, myExitPrice); // 大跳空的时候用开盘价代替
			Sell(0,myExitPrice);    // 数量用0的情况下将全部平仓
		}
		Else
		{
			If(preEntryPrice!=InvalidNumeric && TurtleUnits >= 1)
			{
				If(Open >= preEntryPrice + 0.5*N) // 如果开盘就超过设定的1/2N,则直接用开盘价增仓。
				{
					myEntryPrice = Open;
					preEntryPrice = myEntryPrice;
					Buy(TurtleUnits, myEntryPrice);
					SendOrderThisBar = True;
				}
				while(High >= preEntryPrice + 0.5*N)// 以最高价为标准，判断能进行几次增仓
				{
					myEntryPrice = preEntryPrice + 0.5 * N;
					preEntryPrice = myEntryPrice;
					Buy(TurtleUnits, myEntryPrice);
					SendOrderThisBar = True;
				}
			}

			// 止损指令
			If(Low <= preEntryPrice - 2 * N && SendOrderThisBar == false) // 加仓Bar不止损
			{
				myExitPrice = preEntryPrice - 2 * N;
				Sell(0, myExitPrice); // 数量用0的情况下将全部平仓
				PreBreakoutFailure = True;
			}
		}
	}
//sell/////////////////////////////////////////////////////////////////////////////////////////////////
	Else If(MarketPosition ==-1) // 有空仓的情况
	{
		// 求出持空仓时离市的条件比较值       
		Commentary(“ExitHighestPrice=”+Text(ExitHighestPrice));
		If(High > ExitHighestPrice)
		{
			myExitPrice = Min(High,ExitHighestPrice + MinPoint);
			myExitPrice = IIF(myExitPrice < Open, Open,myExitPrice); // 大跳空的时候用开盘价代替
			BuyToCover(0,myExitPrice);    // 数量用0的情况下将全部平仓
		}Else
		{
			If(preEntryPrice!=InvalidNumeric && TurtleUnits >= 1)
			{
				If(Open <= preEntryPrice - 0.5*N)// 如果开盘就超过设定的1/2N,则直接用开盘价增仓。
				{
					myEntryPrice = Open;
					preEntryPrice = myEntryPrice;
					SellShort(TurtleUnits,myEntryPrice);
					SendOrderThisBar = True;
				}
				while(Low <= preEntryPrice - 0.5*N) // 以最低价为标准，判断能进行几次增仓
				{
					myEntryPrice = preEntryPrice – 0.5 * N;
					preEntryPrice = myEntryPrice;
					SellShort(TurtleUnits,myEntryPrice);
					SendOrderThisBar = True;
				}
			}
			// 止损指令
			If(High >= preEntryPrice + 2 * N &&SendOrderThisBar==false) // 加仓Bar不止损
			{
				myExitPrice = preEntryPrice + 2 * N;
				BuyToCover(0,myExitPrice);// 数量用0的情况下将全部平仓
				PreBreakoutFailure = True;
			}
		}
	}
///////////////////////////////////////////////////////////////////////////////////////////////////
End